"use strict";var k=Object.create;var c=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var G=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty;var p=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),L=(e,t)=>{for(var r in t)c(e,r,{get:t[r],enumerable:!0})},f=(e,t,r,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of B(t))!J.call(e,o)&&o!==r&&c(e,o,{get:()=>t[o],enumerable:!(i=I(t,o))||i.enumerable});return e};var s=(e,t,r)=>(r=e!=null?k(G(e)):{},f(t||!e||!e.__esModule?c(r,"default",{value:e,enumerable:!0}):r,e)),A=e=>f(c({},"__esModule",{value:!0}),e);var b=p(y=>{var v=Object.defineProperty,T=e=>v(e,"__esModule",{value:!0}),V=(e,t)=>{T(e);for(var r in t)v(e,r,{get:t[r],enumerable:!0})};V(y,{HttpError:()=>z,Mode:()=>l,createConfig:()=>U,createGetStaticPaths:()=>Q,createHandler:()=>W,createPlugin:()=>Y,createRoute:()=>K});var l;(function(e){e.Dev="dev",e.Build="build",e.Serve="serve"})(l||(l={}));var z=class extends Error{constructor(e,t=500){super(e),this.name="HttpError",this.statusCode=t}},U=e=>e,Y=e=>e,K=e=>e,Q=e=>e,W=e=>e});var j=p(x=>{var h=Object.defineProperty,X=e=>h(e,"__esModule",{value:!0}),Z=(e,t)=>{X(e);for(var r in t)h(e,r,{get:t[r],enumerable:!0})};Z(x,{timer:()=>ee});function ee(){let e=process.hrtime();return()=>{let[t,r]=process.hrtime(e),i=r/1e6;return t<1?(i>=1?i.toFixed(0):i.toFixed(2))+"ms":t+"."+i.toFixed(0)+"s"}}});var O=p(P=>{var S=Object.defineProperty,te=e=>S(e,"__esModule",{value:!0}),re=(e,t)=>{te(e);for(var r in t)S(e,r,{get:t[r],enumerable:!0})};re(P,{requireSafe:()=>oe});function ie(e){return delete require.cache[e],require(e)}function oe(e){try{return ie(e)}catch{return{}}}});var ae={};L(ae,{default:()=>se,generateRoutes:()=>D,mergeVercelConfig:()=>R,onPostBuild:()=>H,routesManifest:()=>q,vercelConfig:()=>F});module.exports=A(ae);var a=s(require("fs-extra")),n=s(require("path")),w=s(require("deep-extend")),C=s(require("regexparam")),E=s(b()),M=require("esbuild"),_=s(j()),$=s(O());var d={name:"@presta/adapter-vercel",version:"0.3.1",description:"Vercel adapter for Presta.",main:"dist/index.js",types:"dist/index.d.ts",files:["dist"],scripts:{build:"node scripts/build && tsc --emitDeclarationOnly",typecheck:"tsc --noEmit"},repository:{type:"git",url:"git+ssh://git@github.com/sure-thing/presta.git"},author:"estrattonbailey",license:"MIT",bugs:{url:"https://github.com/sure-thing/presta/issues"},homepage:"https://github.com/sure-thing/presta#readme",dependencies:{"deep-extend":"^0.6.0",esbuild:"^0.14.11","fs-extra":"^9.0.1",proxyquire:"^2.1.3",regexparam:"^1.3.0"},devDependencies:{"@types/deep-extend":"^0.4.32","@types/fs-extra":"^9.0.12","@types/node":"^18.6.3","lambda-types":"^1.0.0",next:"^12.0.8",presta:"workspace:^0.45.0",typescript:"^4.7.4"}};var u=`${d.name}@${d.version}`,F={build:{env:{ENABLE_FILE_SYSTEM_API:"1"}}},q={version:3,basePath:"",pages404:!1,dynamicRoutes:[]};async function D(e){let t=e.getManifest().functions,r=e.getOutputDir(),i=Object.assign({},q);for(let o of Object.values(t)){let g=/^\/$/.test(o.route)?"index":n.default.basename(o.dest,".js"),m=n.default.join(r,"./.vercel",g+".js"),{pattern:N}=(0,C.default)(o.route);a.default.outputFileSync(m,`import { adapter } from '@presta/adapter-vercel/dist/runtime';
import { handler } from '${o.dest}';
export default adapter(handler);`),await(0,M.build)({entryPoints:[m],outdir:n.default.join(process.cwd(),"./.output/server/pages"),platform:"node",target:["node12"],minify:!0,allowOverwrite:!0,bundle:!0}),i.dynamicRoutes.push({page:"/"+g,regex:N.toString().slice(1).slice(0,-2).replace(/\\/g,"")})}e.logger.debug(`${u} manifest generated ${JSON.stringify(i)}`),a.default.outputFileSync(n.default.join(process.cwd(),"./.output/routes-manifest.json"),JSON.stringify(i,null,"  "))}function R(){let e=(0,$.requireSafe)(n.default.join(process.cwd(),"vercel.json"));return(0,w.default)(e,F)}async function H(e){let t=(0,_.timer)(),r=e.getManifest(),i=e.getStaticOutputDir();a.default.existsSync(i)&&a.default.copySync(i,n.default.join(process.cwd(),"./.output/static")),Object.keys(r.functions).length&&await D(e),e.logger.info(`${u} complete`,{duration:t()})}var se=(0,E.createPlugin)(()=>function(t){return t.logger.debug(`${u} initialized`),a.default.removeSync(n.default.join(process.cwd(),"./.output")),a.default.outputFileSync(n.default.join(process.cwd(),"vercel.json"),JSON.stringify(R(),null,"  ")),t.events.on("buildComplete",()=>{t.logger.debug(`${u} received event buildComplete`),H(t)}),{name:u}});0&&(module.exports={generateRoutes,mergeVercelConfig,onPostBuild,routesManifest,vercelConfig});
//# sourceMappingURL=data:application/json;base64,
